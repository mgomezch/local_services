version: "2"

services:

  consul:
    image: "consul"
    command: "agent -dev -client=0.0.0.0 -bind=0.0.0.0 -domain=consul.test"
    labels:
      SERVICE_NAME: "consul-local"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - "127.0.1.5:53:8600/tcp"
      - "127.0.1.5:53:8600/udp"
    restart: "always"

  registrator:
    image: "gliderlabs/registrator"
    command: "-internal -resync=5 consul://consul:8500"
    labels:
      SERVICE_NAME: "registrator-local"
    links:
      - "consul"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    restart: "always"
    volumes:
      - "/var/run/docker.sock:/tmp/docker.sock"

  elasticsearch:
    build:
      context: "./services/elasticsearch"
    environment:
      # Elasticsearch 5 uses a lot of RAM on start without these options.
      # This limits it somewhat.  Still large, but manageable.
      # Development shouldn't need more than this.
      ES_JAVA_OPTS: "-Xms256m -Xmx256m"
    labels:
      SERVICE_NAME: "elasticsearch-local"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - "9200:9200"
    restart: "always"
    volumes:
     - "./data/elasticsearch:/usr/share/elasticsearch/data"

  logstash:
    image: "logstash:5"
    build:
      context: "./services/logstash"
    expose:
      - "5000"
      - "12201"
    labels:
      SERVICE_NAME: "logstash-local"
    links:
      - "elasticsearch"
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "10"
    ports:
      - "5000:5000"
      - "12201:12201"
    restart: "always"

  kibana:
    build:
      context: "./services/kibana"
    depends_on:
      - "consul"
      - "logstash"
      - "registrator"
    labels:
      SERVICE_NAME: "kibana-local"
    links:
      - "elasticsearch"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
    ports:
      - "5601:5601"
    restart: "always"

  cadvisor:
    image: "google/cadvisor"
    command: "--logtostderr=true --port=80 --housekeeping_interval=10s --storage_driver=influxdb --storage_driver_host=influxdb:8086"
    depends_on:
      - "consul"
      - "logstash"
      - "registrator"
    labels:
      SERVICE_NAME: "cadvisor-local"
    links:
      - "influxdb"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
    ports:
      - "10000:80"
    restart: "always"
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker:/var/lib/docker:ro"

  influxdb:
    image: "influxdb"
    depends_on:
      - "consul"
      - "logstash"
      - "registrator"
    expose:
      - 8083
    labels:
      SERVICE_NAME: "influxdb-local"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
    ports:
      - "8601:8601"
    restart: "always"
    volumes:
      - "./data/influxdb:/var/lib/influxdb"

  telegraf:
    build:
      context: "./services/telegraf"
    depends_on:
      - "consul"
      - "logstash"
      - "registrator"
    environment:
      HOST_MOUNT_PREFIX: "/rootfs"
      HOST_PROC: "/rootfs/proc"
      HOST_SYS: "/rootfs/sys"
    labels:
      SERVICE_NAME: "telegraf-local"
    links:
      - "consul"
      - "elasticsearch"
      - "influxdb"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
    privileged: true
    restart: "always"
    volumes:
      - "/sys:/rootfs/sys:ro"
      - "/proc:/rootfs/proc:ro"
      - "/var/lib/docker:/var/lib/docker:ro"
      - "/var/run:/var/run:rw"

  grafana:
    image: "grafana/grafana"
    depends_on:
      - "consul"
      - "logstash"
      - "registrator"
    environment:
      INFLUXDB_HOST: "influxdb"
      INFLUXDB_PORT: "8086"
      INFLUXDB_NAME: "cadvisor"
      INFLUXDB_USER: "root"
      INFLUXDB_PASS: "root"
      INFLUXDB_GRAPHITE_ENABLED: "true"
    labels:
      SERVICE_NAME: "grafana-local"
    links:
      - "influxdb"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
    ports:
      - "3000:3000"
    restart: "always"
    volumes:
      - "./data/grafana/lib:/var/lib/grafana"
      - "./data/grafana/plugins:/var/lib/grafana/plugins"
      - "./data/grafana/log:/var/log/grafana"

#TODO: alerting with Kapacitor
# kapacitor:
#   image: "kapacitor"
#   depends_on:
#     - "consul"
#     - "logstash"
#     - "registrator"
#   labels:
#     SERVICE_NAME: "kapacitor-local"
#   links:
#     - "influxdb"
#   logging:
#     driver: "gelf"
#     options:
#       gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
#   restart: "always"
#   volumes:
#     - "./data/kapacitor:/var/lib/kapacitor"

  devpi:
    build:
      context: "./services/devpi"
    depends_on:
      - "logstash"
    expose:
      - "3141"
    labels:
      SERVICE_NAME: "devpi-local"
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://logstash-local-12201.service.consul.test:12201"
    ports:
      - "3141:3141"
    restart: "always"
    volumes:
      - "./data/devpi:/var/lib/devpi"

